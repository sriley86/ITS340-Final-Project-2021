package v1porject_mc;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import v1porject_mc.PatientDemographics;
import static v1porject_mc.PatientDemographics.PatientID;
import static v1porject_mc.PatientDemographics.getCurrentPatientID;
import static v1porject_mc.PatientDemographics.tabledemographics;
//import static v1porject_mc.PatientDemographics.tabledemographics;
//import static v1porject_mc.PatientDemographics.tabledemographics;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author sharylriley
 */
public class AllergyHistory extends javax.swing.JFrame {
    
    
    
    
    public AllergyHistory()
    {
        
    }
    /**
     * Creates new form PatientDemographics
     */
    public AllergyHistory(String patientID) {
        initComponents();
        
        //author sara rodriguez 
        initializePatientIdField(patientID);
        table_update();
        
        //Author Sharyl Riley
        // default settings  
        toggleEditAndBackground();
        isNew = false;
        backGround = Color.lightGray;
       
       

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buttonGenMedHisForm = new javax.swing.JButton();
        buttonImmunizationHisForm = new javax.swing.JButton();
        buttonMedicationHisForm = new javax.swing.JButton();
        buttonAllergyAutoInterview = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        buttonSaveAllergy = new javax.swing.JButton();
        buttonEditAllergy = new javax.swing.JButton();
        buttonDeleteAllergy = new javax.swing.JButton();
        buttonAddAllergy = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        AllergyID = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        buttonFamilyHisForm = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        AllergyDescription = new javax.swing.JTextField();
        Allergen = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        AllergyStartDate = new javax.swing.JTextField();
        AllergyEndDate = new javax.swing.JTextField();
        buttonCloseAllergyForm = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        PatientID = new javax.swing.JTextField();
        UpdateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Allergy Record");

        buttonGenMedHisForm.setText("General Medical History Form");
        buttonGenMedHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenMedHisFormActionPerformed(evt);
            }
        });

        buttonImmunizationHisForm.setText("Immunization History Form");
        buttonImmunizationHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImmunizationHisFormActionPerformed(evt);
            }
        });

        buttonMedicationHisForm.setText("Medication History Form");
        buttonMedicationHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMedicationHisFormActionPerformed(evt);
            }
        });

        buttonAllergyAutoInterview.setText("Start Allergy Automated Interview ");
        buttonAllergyAutoInterview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAllergyAutoInterviewActionPerformed(evt);
            }
        });

        jLabel2.setText("Allergy History Form");

        buttonSaveAllergy.setText("Save Allergy Record");
        buttonSaveAllergy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveAllergyActionPerformed(evt);
            }
        });

        buttonEditAllergy.setText("Edit Selected Allergy");
        buttonEditAllergy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditAllergyActionPerformed(evt);
            }
        });

        buttonDeleteAllergy.setText("Delete Selected Allergy");
        buttonDeleteAllergy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteAllergyActionPerformed(evt);
            }
        });

        buttonAddAllergy.setText("Add New Allergy");
        buttonAddAllergy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddAllergyActionPerformed(evt);
            }
        });

        jLabel3.setText("Allergy ID:");

        AllergyID.setEditable(false);
        AllergyID.setBackground(java.awt.Color.pink);

        jLabel8.setText("jLabel8");

        jLabel15.setText("Access Forms:");

        buttonFamilyHisForm.setText("Family History Form");
        buttonFamilyHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFamilyHisFormActionPerformed(evt);
            }
        });

        jLabel28.setText("Allergen:");

        jLabel29.setText("Allergy Description:");

        AllergyDescription.setText(" ");

        jLabel5.setText("Allergy Start Date:");

        jLabel6.setText("Allergy End Date:");

        buttonCloseAllergyForm.setText("Close");
        buttonCloseAllergyForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseAllergyFormActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Allergy ID", "Allergen", "Start Date", "End Date"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setText("Patient ID:");

        PatientID.setEditable(false);
        PatientID.setBackground(java.awt.Color.pink);

        UpdateButton.setText("Update Data");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(726, 726, 726))
                            .addComponent(buttonMedicationHisForm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonImmunizationHisForm, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel28)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Allergen, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(AllergyStartDate)
                                        .addComponent(AllergyEndDate))))
                            .addComponent(jLabel29))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buttonAddAllergy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonEditAllergy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonDeleteAllergy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonSaveAllergy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonCloseAllergyForm))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AllergyID, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buttonAllergyAutoInterview)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(UpdateButton)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 480, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1)
                                .addGap(45, 45, 45)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonGenMedHisForm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonFamilyHisForm, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AllergyDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 817, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonGenMedHisForm)
                        .addGap(6, 6, 6)
                        .addComponent(buttonFamilyHisForm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonImmunizationHisForm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonMedicationHisForm))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonAddAllergy)
                            .addComponent(buttonEditAllergy)
                            .addComponent(buttonDeleteAllergy)
                            .addComponent(buttonSaveAllergy)
                            .addComponent(buttonCloseAllergyForm))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAllergyAutoInterview)
                    .addComponent(UpdateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(AllergyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(PatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(Allergen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(AllergyStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(AllergyEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AllergyDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 297, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(218, 218, 218))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    //author sara rodriguez 
    private void table_update()
    {
        int c;
        
        String InsertSql = ("select * from allergyhistorytable WHERE PatientID = " +  PatientID.getText());
        try
        {
            //register drive class
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(dbUrl, "root","P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSql);
            
            Statement  stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(InsertSql);
            
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
            Df.setRowCount(0);
            
             //insert into jTable column/rows
            while(rs.next())
            {
                PatientID.setText(rs.getString("PatientID")) ;
                
                Vector v2 = new Vector();
                for(int i=1;i<=c;i++)
                {
                    v2.add(rs.getString("AllergyID"));
                    v2.add(rs.getString("Allergen"));
                    v2.add(rs.getString("AllergyStartDate"));
                    v2.add(rs.getString("AllergyEndDate"));
                 
                }
                
                Df.addRow(v2);
            }

            con.close();
            
        }
        catch(SQLException e)
        {
            
            System.out.println("Error executing INSERT Operation");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
    }
    private void buttonMedicationHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMedicationHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
         //calls Medication History Form
        MedicationHistory form = new MedicationHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonMedicationHisFormActionPerformed

    private void buttonAddAllergyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddAllergyActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        
        isNew = true;
        backGround = Color.WHITE;
        toggleEditAndBackground();
        resetTextInTableAllergy();
       
    }//GEN-LAST:event_buttonAddAllergyActionPerformed

    private void buttonGenMedHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenMedHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        GeneralMedicalHistory form = new GeneralMedicalHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonGenMedHisFormActionPerformed

    private void buttonFamilyHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFamilyHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        //calls Familiy History Form
        FamilyHistory form = new FamilyHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonFamilyHisFormActionPerformed

    private void buttonImmunizationHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImmunizationHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        // calls Immunization Form
        ImmunizationHistory form = new ImmunizationHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonImmunizationHisFormActionPerformed

    private void buttonEditAllergyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditAllergyActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        
        isNew = true;
        backGround = Color.WHITE;
        toggleEditAndBackground();
        
        
        //author sara rodriguez 
        String InsertSql = ("select * from allergyhistorytable WHERE AllergyID=" ) + AllergyID.getText();//+ getCurrentPatientID());
        try
        {
        //register the driver class
        //initialize
            Class.forName("com.mysql.cj.jdbc.Driver");
            //actual connect with login
            Connection con = DriverManager.getConnection(dbUrl, "root", "P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSql); //insert statement from above
            
            Statement  stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(InsertSql);
            
           //displays ALL information into jTextfields
            while(rs.next())
            {
           
                Allergen.setText(rs.getString("Allergen"));
                AllergyID.setText(rs.getString("AllergyID"));
                AllergyStartDate.setText(rs.getString("AllergyStartDate"));
                AllergyEndDate.setText(rs.getString("AllergyEndDate"));
                AllergyDescription.setText(rs.getString("AllergyDescription"));
            
            }
             con.close(); //close connection
        }
        
        catch(SQLException e)
        {
            System.out.println("Error exceuting EDIT Operation!");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
      
        
        //calls the getter currentPatientID
        getCurrentPatientID();
       
    }//GEN-LAST:event_buttonEditAllergyActionPerformed

    private void buttonDeleteAllergyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteAllergyActionPerformed
        // TODO add your handling code here:
        
        //author sara rodriguez 
        
        String InsertSQL = "DELETE from allergyhistorytable WHERE AllergyID=?"; 
        try
        {
        //register the driver class
        //initialize
            Class.forName("com.mysql.cj.jdbc.Driver");
            //actual connect with login
            Connection con = DriverManager.getConnection(dbUrl, "root", "P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSQL); //insert statement from above
            
             //1 = first ? from above
            ps.setString(1, AllergyID.getText());
            ps.executeUpdate();
            con.close(); //close connection
        }
        
        catch(SQLException e)
        {
            System.out.println("Error exceuting DELETE Operation!");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
        
        //CODE BELOW REMOVES ROW FROM JTABLE
        
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        
        //delete row
        if(jTable1.getSelectedRowCount()==1)
        {
            tblModel.removeRow(jTable1.getSelectedRow());
        }
        else
        {
            if(jTable1.getRowCount()==0)
            {
                //if table is empty(no data) than display message
                JOptionPane.showMessageDialog(this, "Table is empty.");
            }
            else //if table isnt empty but user did not select a row
            {
                JOptionPane.showMessageDialog(this, "Please select a row to be deleted.");
            }
        }
        
        JOptionPane.showMessageDialog(null, "Patient data is removed.");
        //reset text
        resetTextInTableAllergy();
    }//GEN-LAST:event_buttonDeleteAllergyActionPerformed

    private void buttonSaveAllergyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveAllergyActionPerformed
        // TODO add your handling code here:
        
       //Author Sharyl Riley
        isNew = false;
        backGround = Color.lightGray;
        toggleEditAndBackground();
        
        
        //author sara rodriguez 
        initializePatientIdField(PatientID.getText());
        //author sara rodriguez 
        String allergen = Allergen.getText();
        String allergyStartDate = AllergyStartDate.getText();
        String allergyEndDate = AllergyEndDate.getText();
        String allergyDescription = AllergyDescription.getText();

        
       
        
        String InsertSql = "INSERT INTO allergyhistorytable" + "(  Allergen, AllergyStartDate, AllergyEndDate, AllergyDescription, PatientID) "
                + " VALUES ( ?,?,?,?,?)";
     
        //insert record into MySQLDatabase
        try
        {
            DefaultTableModel Df = (DefaultTableModel) tabledemographics.getModel();
        
            int selectedRowIndex = tabledemographics.getSelectedRow();
            int PatientID = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());
            //register drive class
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(dbUrl, "root","P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSql);
            
            
         
            ps.setString(1,allergen);
            ps.setString(2, allergyStartDate);
            ps.setString(3, allergyEndDate);
            ps.setString(4, allergyDescription);
            ps.setInt(5,PatientID);
            int rowCount = ps.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Record Added Succesfully");
            
            //resets text fields
            resetTextInTableAllergy();
            //updates table
            table_update();
            
            con.close();
            
        }
        catch(SQLException e)
        {
            
            System.out.println("Error executing INSERT Operation");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
       
      
    }//GEN-LAST:event_buttonSaveAllergyActionPerformed

    private void buttonCloseAllergyFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseAllergyFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        //calls Medication History Form
        PatientDemographics form = new PatientDemographics ();
        form.setVisible(true);
        this.setVisible(false);
        resetTextInTableAllergy();
    }//GEN-LAST:event_buttonCloseAllergyFormActionPerformed

    private void buttonAllergyAutoInterviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAllergyAutoInterviewActionPerformed
        // TODO add your handling code here:
        
         //Author Sharyl Riley April 17, 2021
        //calles decisiontreeclass allergy automated interview method
        DecisionTreeClass.runAllergyAutomatedInterview();
    }//GEN-LAST:event_buttonAllergyAutoInterviewActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        //author sara rodriguez 
        DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
     
        //puts information into text fields when clicking a record
        AllergyID.setText(Df.getValueAt(selectedIndex, 0).toString());
        Allergen.setText(Df.getValueAt(selectedIndex, 1).toString());
        AllergyStartDate.setText(Df.getValueAt(selectedIndex, 2).toString());
        AllergyEndDate.setText(Df.getValueAt(selectedIndex, 3).toString());

    }//GEN-LAST:event_jTable1MouseClicked

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        isNew = false;
        backGround = Color.lightGray;
        
        //author sara rodriguez 
        initializePatientIdField(PatientID.getText());
        //author sara rodriguez 
        DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        
        //update MySQLDatabase
        try
        {
            int AllergyID = Integer.parseInt(Df.getValueAt(selectedIndex,0).toString());
            String allergen = Allergen.getText();
            String allergyStartDate = AllergyStartDate.getText();
            String allergyEndDate = AllergyEndDate.getText();
            String allergyDescription = AllergyDescription.getText();
        
            
        
            String InsertSql = ("update allergyhistorytable set Allergen=?,AllergyStartDate=?,AllergyEndDate=?,AllergyDescription=? where AllergyID=?");
                   
            
            //register drive class
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(dbUrl, "root","P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSql);
            
            
            
            ps.setString(1,allergen);
            ps.setString(2, allergyStartDate);
            ps.setString(3, allergyEndDate);
            ps.setString(4, allergyDescription);
            ps.setInt(5,AllergyID);
            ps.executeUpdate();
            int rowCount = ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record was Updated");
            
            //updates table
            table_update();
            
            //resets text fields
            resetTextInTableAllergy();
            toggleEditAndBackground();
            
            
            con.close();
            
        }
        catch(SQLException e)
        {
            
            System.out.println("Error executing Update Operation");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
        

    }//GEN-LAST:event_UpdateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllergyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllergyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllergyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllergyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllergyHistory(PatientDemographics.getCurrentPatientID()).setVisible(true);
            }
        });
    }
    
    //author sara rodriguez 
    private static void initializePatientIdField(String patientID)
    {
        PatientID.setText(patientID); //used to pass PatientID
    }
    
    //Author sara rodiguez
     private static void toggleEditAndBackground(){
        
       Allergen.setEditable(isNew);
       AllergyStartDate.setEditable(isNew);
       AllergyEndDate.setEditable(isNew);
       AllergyDescription.setEditable(isNew);
       
       Allergen.setBackground(backGround);
       AllergyStartDate.setBackground(backGround);
       AllergyEndDate.setBackground(backGround);
       AllergyDescription.setBackground(backGround);
    }
    //Author Sharyl Riley
    private static void resetTextInTableAllergy(){
        //resets variables
        Allergen.setText("");
        AllergyStartDate.setText("");
        AllergyEndDate.setText("");
        AllergyDescription.setText("");
    }
    //Author Sharyl Riley
    // variables for toggleEditAndBackground Method (global variables)
    private static boolean isNew = false;
    private static Color backGround = Color.LIGHT_GRAY;
    private static String currentPatientID;
    private static String dbUrl  = "jdbc:mysql://localhost:3306/genmedhis?autoconnect=true&useSSL=false"; //connection string of the database


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField Allergen;
    public static javax.swing.JTextField AllergyDescription;
    public static javax.swing.JTextField AllergyEndDate;
    public static javax.swing.JTextField AllergyID;
    public static javax.swing.JTextField AllergyStartDate;
    public static javax.swing.JTextField PatientID;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JButton buttonAddAllergy;
    private javax.swing.JButton buttonAllergyAutoInterview;
    private javax.swing.JButton buttonCloseAllergyForm;
    private javax.swing.JButton buttonDeleteAllergy;
    private javax.swing.JButton buttonEditAllergy;
    private javax.swing.JButton buttonFamilyHisForm;
    private javax.swing.JButton buttonGenMedHisForm;
    private javax.swing.JButton buttonImmunizationHisForm;
    private javax.swing.JButton buttonMedicationHisForm;
    private javax.swing.JButton buttonSaveAllergy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

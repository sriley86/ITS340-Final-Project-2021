package v1porject_mc;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import v1porject_mc.PatientDemographics;
import static v1porject_mc.PatientDemographics.getCurrentPatientID;
import static v1porject_mc.PatientDemographics.tabledemographics;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author sharylriley
 */
public class ImmunizationHistory extends javax.swing.JFrame {
    public ImmunizationHistory()
    {
        
    }

    /**
     * Creates new form PatientDemographics
     */
    public ImmunizationHistory(String patientID) {
        initComponents();
        //author sara rodriguez 
        initializePatientIdField(patientID);
        table_update();
        
        //author Sharyl Riley
        //enable form to edit
        isNew = false;
        //change form background color to lightgrey
        backGround = Color.lightGray;
        toggleEditAndBackground();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonSaveImmunization = new javax.swing.JButton();
        buttonEditImmunization = new javax.swing.JButton();
        buttonDeleteImmunization = new javax.swing.JButton();
        buttonAddImmunization = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        ImmunizationsID = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        Comments = new javax.swing.JTextField();
        Vaccine = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ImmunizationDate = new javax.swing.JTextField();
        ExperationDate = new javax.swing.JTextField();
        buttonCloseImmunizationForm = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        Delivery = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        HCPId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        PatientID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        UpdateButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        buttonGenMedHisForm = new javax.swing.JButton();
        buttonAllergyHisForm = new javax.swing.JButton();
        buttonFamilyHisForm = new javax.swing.JButton();
        buttonMedicationHisForm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Immunization Record");

        jLabel2.setText("Immunization History Form");

        buttonSaveImmunization.setText("Save Immunization Record");
        buttonSaveImmunization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveImmunizationActionPerformed(evt);
            }
        });

        buttonEditImmunization.setText("Edit Selected Immunization");
        buttonEditImmunization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditImmunizationActionPerformed(evt);
            }
        });

        buttonDeleteImmunization.setText("Delete Selected Immunization");
        buttonDeleteImmunization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteImmunizationActionPerformed(evt);
            }
        });

        buttonAddImmunization.setText("Add New Immunization ");
        buttonAddImmunization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddImmunizationActionPerformed(evt);
            }
        });

        jLabel3.setText("Immunizations ID:");

        ImmunizationsID.setEditable(false);
        ImmunizationsID.setBackground(java.awt.Color.pink);

        jLabel8.setText("jLabel8");

        jLabel28.setText("Vaccine:");

        jLabel29.setText(" Comments:");

        Comments.setText(" ");
        Comments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CommentsActionPerformed(evt);
            }
        });

        jLabel5.setText("Immunization Date:");

        jLabel6.setText("Expiration Date:");

        ImmunizationDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImmunizationDateActionPerformed(evt);
            }
        });

        buttonCloseImmunizationForm.setText("Close");
        buttonCloseImmunizationForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseImmunizationFormActionPerformed(evt);
            }
        });

        jLabel7.setText("Delivery:");

        jLabel9.setText("HCP ID:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Immunization ID", "Vaccine", "Expiration Date"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        PatientID.setEditable(false);
        PatientID.setBackground(java.awt.Color.pink);

        jLabel4.setText("Patient ID:");

        UpdateButton.setText("Update Data");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(1189, 1189, 1189))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(Comments, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCloseImmunizationForm)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ImmunizationsID, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Vaccine, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ImmunizationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ExperationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Delivery, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HCPId, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(UpdateButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonAddImmunization, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSaveImmunization)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEditImmunization)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDeleteImmunization)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddImmunization)
                    .addComponent(buttonSaveImmunization)
                    .addComponent(buttonEditImmunization)
                    .addComponent(buttonDeleteImmunization))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UpdateButton)
                .addGap(13, 13, 13)
                .addComponent(buttonCloseImmunizationForm)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ImmunizationsID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(Vaccine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ImmunizationDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ExperationDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Delivery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(HCPId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Comments, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(218, 218, 218))
        );

        jLabel15.setText("Access Forms:");

        buttonGenMedHisForm.setText("General Medical History Form");
        buttonGenMedHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenMedHisFormActionPerformed(evt);
            }
        });

        buttonAllergyHisForm.setText("Allergy History Form");
        buttonAllergyHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAllergyHisFormActionPerformed(evt);
            }
        });

        buttonFamilyHisForm.setText("Family History Form");
        buttonFamilyHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFamilyHisFormActionPerformed(evt);
            }
        });

        buttonMedicationHisForm.setText("Medication History Form");
        buttonMedicationHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMedicationHisFormActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 973, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonGenMedHisForm, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonAllergyHisForm, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonFamilyHisForm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonMedicationHisForm, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(buttonGenMedHisForm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonAllergyHisForm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonFamilyHisForm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonMedicationHisForm)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void table_update()
    {
        int c;
       
        //register the driver class
        //initialize
       
        
        String InsertSql = "Select * FROM immunizationshistorytable WHERE PatientID =" + PatientID.getText();
        String dbOutput;
        
        try
        {
        //register the driver class
        //initialize
            Class.forName("com.mysql.cj.jdbc.Driver");
  
            Connection con = DriverManager.getConnection(dburl, "root","P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSql);
            
            Statement  stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(InsertSql);
            
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
            Df.setRowCount(0);
            
           //inserts into jTable column and rows
                while(rs.next())
                {
                    Vector v2 = new Vector();
                    
                    PatientID.setText(rs.getString("PatientID")) ;
                    
                    for(int a=1; a<=c; a++)
                    {
                        v2.add(rs.getString("ImmunizationsID"));
                        v2.add(rs.getString("Vaccine"));
                        v2.add(rs.getString("ExperationDate"));
                   }
                    
              
                    Df.addRow(v2);
              
               }
           
            con.close(); //close connection
        }
        
        catch(SQLException e)
        {
            System.out.println("Error exceuting INSERT Operation!");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
      ;
        
    }
       
      
    private void buttonMedicationHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMedicationHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
         //calls Medication History Form
        MedicationHistory form = new MedicationHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonMedicationHisFormActionPerformed

    private void buttonDeleteImmunizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteImmunizationActionPerformed
        // TODO add your handling code here:
        
        //Author Sara
        //Delete record from MySQLDatabase
        
    
        String InsertSQL = "DELETE from immunizationshistorytable WHERE ImmunizationsID=?"; 
        try
        {
        //register the driver class
        //initialize
            Class.forName("com.mysql.cj.jdbc.Driver");
            //actual connect with login
            Connection con = DriverManager.getConnection(dburl, "root", "P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSQL); //insert statement from above
            
             //1 = first ? from above
            ps.setString(1, ImmunizationsID.getText());
            ps.executeUpdate();
            con.close(); //close connection
        }
        
        catch(SQLException e)
        {
            System.out.println("Error exceuting INSERT Operation!");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
        
        //CODE BELOW REMOVES ROW FROM JTABLE
        
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        
        //delete row
        if(jTable1.getSelectedRowCount()==1)
        {
            tblModel.removeRow(jTable1.getSelectedRow());
        }
        else
        {
            if(jTable1.getRowCount()==0)
            {
                //if table is empty(no data) than display message
                JOptionPane.showMessageDialog(this, "Table is empty.");
            }
            else //if table isnt empty but user did not select a row
            {
                JOptionPane.showMessageDialog(this, "Please select a row to be deleted.");
            }
        }
        
        JOptionPane.showMessageDialog(null, "Patient data is removed.");
        resetTextInTableImmun();
    }//GEN-LAST:event_buttonDeleteImmunizationActionPerformed

    private void buttonGenMedHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenMedHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        GeneralMedicalHistory form = new GeneralMedicalHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonGenMedHisFormActionPerformed

    private void ImmunizationDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImmunizationDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ImmunizationDateActionPerformed

    private void CommentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CommentsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CommentsActionPerformed

    private void buttonAllergyHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAllergyHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        // calls Allergy Form
        AllergyHistory form = new AllergyHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonAllergyHisFormActionPerformed

    private void buttonFamilyHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFamilyHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        //calls Familiy History Form
        FamilyHistory form = new FamilyHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonFamilyHisFormActionPerformed

    private void buttonAddImmunizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddImmunizationActionPerformed
        // TODO add your handling code here:
        //author Sharyl Riley
        isNew = true;
        backGround = Color.WHITE;
        toggleEditAndBackground();
        resetTextInTableImmun();
    }//GEN-LAST:event_buttonAddImmunizationActionPerformed

    private void buttonSaveImmunizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveImmunizationActionPerformed
        // TODO add your handling code here:
        
        //author Sharyl Riley
        isNew = false;
        //change form background color to lightgrey
        backGround = Color.lightGray;
        toggleEditAndBackground();
        
        String vaccine = Vaccine.getText();
        String immunizationdate = ImmunizationDate.getText();
        String experationdate = ExperationDate.getText();
        String delivery = Delivery.getText();
        String comments = Comments.getText();
     

 
        String InsertSQL = "INSERT INTO immunizationshistorytable "
                + "(Vaccine, ImmunizationDate, ExperationDate, Delivery, Comments, HCPId, PatientID) "
                + "VALUES (?, ?, ?, ?, ?, ?, ?)"; 

        try
        {
        
            DefaultTableModel Df = (DefaultTableModel) tabledemographics.getModel();
        
            int selectedRowIndex = tabledemographics.getSelectedRow();
            int PatientID = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());
            int hcpId = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());
            //register drive class
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(dburl, "root","P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSQL);
            
         //   1 = first ? from above
            ps.setString(1, vaccine);
            ps.setString(2, immunizationdate);
            ps.setString(3, experationdate); 
            ps.setString(4, delivery);
            ps.setString(5, comments);
            ps.setInt(6, hcpId);
            ps.setInt(7,PatientID);
            int rowCount = ps.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Record inserted successfully");
            
            //resets table
            table_update();
            
            //makes textfields back to blank
            resetTextInTableImmun();
           
           con.close(); //close connection
        }
        
       catch(SQLException e)
        {
            System.out.println("Error exceuting INSERT Operation!");
           e.printStackTrace();
        }
       catch(ClassNotFoundException e)
        {
           e.printStackTrace();
        }
    }//GEN-LAST:event_buttonSaveImmunizationActionPerformed

    private void buttonEditImmunizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditImmunizationActionPerformed
        // TODO add your handling code here:
         //author Sharyl Riley
        //enable form to edit
        isNew = true;
        backGround = Color.WHITE;
        toggleEditAndBackground();
        
        
        //author sara rodriguez 
        String InsertSql = ("select * from immunizationshistorytable WHERE ImmunizationsID=" ) + ImmunizationsID.getText();
        try
        {
            
        //initialize
            Class.forName("com.mysql.cj.jdbc.Driver");
            //actual connect with login
            Connection con = DriverManager.getConnection(dburl, "root", "P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSql); //insert statement from above
            
            Statement  stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(InsertSql);
            
            //displays ALL information into jTextfields
            while(rs.next())
            {
                ImmunizationsID.setText(rs.getString("ImmunizationsID"));
                PatientID.setText(rs.getString("PatientID"));
                Vaccine.setText(rs.getString("Vaccine"));
                ImmunizationDate.setText(rs.getString("ImmunizationDate"));
                ExperationDate.setText(rs.getString("ExperationDate"));
                Delivery.setText(rs.getString("Delivery"));
                Comments.setText(rs.getString("Comments"));
                HCPId.setText(rs.getString("HCPId"));

            }
            
             con.close(); //close connection
        }
        
        catch(SQLException e)
        {
            System.out.println("Error exceuting EDIT Operation!");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
      
        //author sara rodriguez 
        //call the getter currentPatientID
        getCurrentPatientID();
    }//GEN-LAST:event_buttonEditImmunizationActionPerformed

    private void buttonCloseImmunizationFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseImmunizationFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        //calls Medication History Form
        PatientDemographics form = new PatientDemographics ();
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonCloseImmunizationFormActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        //author sharyl riley
        isNew = false;
        backGround = Color.lightGray;
        toggleEditAndBackground();
        
        
        //author sara rodriguez 
        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        
        int selectedRowIndex = jTable1.getSelectedRow();

      
        String InsertSQL = "UPDATE immunizationshistorytable  SET Vaccine=?, ImmunizationDate=?, ExperationDate=?, Delivery=?, Comments=?, "
                + "HCPId=? where ImmunizationsID=?"; 
        
        //UPDATES MYSQLDATABASE
        try
        {
            int ImmunizationsID = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());
        //register the driver class
        //initialize
            Class.forName("com.mysql.cj.jdbc.Driver");
            //actual connect with login
            Connection con = DriverManager.getConnection(dburl, "root", "P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSQL); //insert statement from above
            String vaccine = Vaccine.getText();
            String immunizationdate = ImmunizationDate.getText();
            String experationdate = ExperationDate.getText();
            String delivery = Delivery.getText();
            String hcpid= HCPId.getText();
            String comments = Comments.getText();
            
            ps.setString(1, vaccine);
            ps.setString(2, immunizationdate);
            ps.setString(3, experationdate); 
            ps.setString(4, delivery);
            ps.setString(5, comments);
            ps.setString(6, hcpid);
            ps.setInt(7,ImmunizationsID);
            int rowCount = ps.executeUpdate();
            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record was Updated");
            table_update();
            
            //reset text
            resetTextInTableImmun();
            
            
            con.close(); //close connection
        }
        
        catch(SQLException e)
        {
            System.out.println("Error exceuting UPDATING Operation!");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        //author sara rodriguez 
        DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
         int selectedIndex = jTable1.getSelectedRow();
     
        //displays information which clicking on a record
        ImmunizationsID.setText(Df.getValueAt(selectedIndex, 0).toString());
        Vaccine.setText(Df.getValueAt(selectedIndex, 1).toString());
        ExperationDate.setText(Df.getValueAt(selectedIndex, 2).toString());
        
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImmunizationHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImmunizationHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImmunizationHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImmunizationHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImmunizationHistory(PatientDemographics.getCurrentPatientID()).setVisible(true);
            }
        });
    }
    //author Sharyl Riley
    private static void toggleEditAndBackground(){
        //Makes textfields non editable
        Vaccine.setEditable(isNew);
        ImmunizationDate.setEditable(isNew);
        ExperationDate.setEditable(isNew);
        Delivery.setEditable(isNew);
        HCPId.setEditable(isNew);
        Comments.setEditable(isNew);
        
        //makes background default color lightGray
        Vaccine.setBackground(backGround);
        ImmunizationDate.setBackground(backGround);
        ExperationDate.setBackground(backGround);
        Delivery.setBackground(backGround);
        HCPId.setBackground(backGround);
        Comments.setBackground(backGround);
    }
    //Author Sharyl Riley
    private static void resetTextInTableImmun(){
        
        //resets text
        
        ImmunizationsID.setText("");
        ImmunizationDate.setText("");
        Vaccine.setText("");
        ExperationDate.setText("");
        Delivery.setText("");
        HCPId.setText("");
        Comments.setText("");
        
        
    }
    
    //author sara rodriguez 
    private static void initializePatientIdField(String patientID)
    {
        PatientID.setText(patientID); //used to pass PatientID
    }
    //Author Sharyl Riley
    // variables for toggleEditAndBackground Method
    private static boolean isNew = false;
    private static Color backGround = Color.LIGHT_GRAY;
    private static String currentPatientID;
    private static String dburl = "jdbc:mysql://localhost:3306/genmedhis?autoconnect=true&useSSL=false"; //connection string of the database

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField Comments;
    public static javax.swing.JTextField Delivery;
    public static javax.swing.JTextField ExperationDate;
    public static javax.swing.JTextField HCPId;
    public static javax.swing.JTextField ImmunizationDate;
    public static javax.swing.JTextField ImmunizationsID;
    public static javax.swing.JTextField PatientID;
    private javax.swing.JButton UpdateButton;
    public static javax.swing.JTextField Vaccine;
    private javax.swing.JButton buttonAddImmunization;
    private javax.swing.JButton buttonAllergyHisForm;
    private javax.swing.JButton buttonCloseImmunizationForm;
    private javax.swing.JButton buttonDeleteImmunization;
    private javax.swing.JButton buttonEditImmunization;
    private javax.swing.JButton buttonFamilyHisForm;
    private javax.swing.JButton buttonGenMedHisForm;
    private javax.swing.JButton buttonMedicationHisForm;
    private javax.swing.JButton buttonSaveImmunization;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

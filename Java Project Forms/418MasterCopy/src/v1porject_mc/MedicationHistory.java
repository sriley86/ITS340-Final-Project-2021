package v1porject_mc;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import v1porject_mc.PatientDemographics;
import static v1porject_mc.PatientDemographics.PatientID;
import static v1porject_mc.PatientDemographics.getCurrentPatientID;
import static v1porject_mc.PatientDemographics.tabledemographics;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author sharylriley
 */
public class MedicationHistory extends javax.swing.JFrame {
    public MedicationHistory()
    {
        
    }
    /**
     * Creates new form PatientDemographics
     */
    public MedicationHistory(String patientID) {
         initComponents();

         //author sara rodriguez 
        initializePatientIdField(patientID);
        table_update();

        //Author Sharyl Riley
        // default settings
        toggleEditAndBackground();
        isNew = false;
        backGround = Color.lightGray;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buttonGenMedHisForm = new javax.swing.JButton();
        buttonImmunizationHisForm = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        buttonSaveMedication = new javax.swing.JButton();
        buttonEditMedication = new javax.swing.JButton();
        buttonDeleteMedication = new javax.swing.JButton();
        buttonAddMedication = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        MedicationID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        CurrentLMedicationID = new javax.swing.JTextField();
        Medication = new javax.swing.JTextField();
        PrescriptionQuanity = new javax.swing.JTextField();
        PrescriptionQuanityUnits = new javax.swing.JTextField();
        Refills = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        PrescriptionHCP = new javax.swing.JTextField();
        PrescriptionDate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        RefillPeriod = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        buttonAllergyHisForm = new javax.swing.JButton();
        buttonFamilyHisForm = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        PharmacyID = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        PrescriptionMedsAmt = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        PrescriptionMedsUnit = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        MedicationStartDate = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        MedicationEndDate = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        Instructions = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonCloseMedicatonForm = new javax.swing.JButton();
        CheckBoxGeneric = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        PatientID = new javax.swing.JTextField();
        UpdateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Medication Record");

        buttonGenMedHisForm.setText("General Medical History Form");
        buttonGenMedHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenMedHisFormActionPerformed(evt);
            }
        });

        buttonImmunizationHisForm.setText("Immunization History Form");
        buttonImmunizationHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImmunizationHisFormActionPerformed(evt);
            }
        });

        jLabel2.setText("Patient Medications Form");

        buttonSaveMedication.setText("Save Medication Record");
        buttonSaveMedication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveMedicationActionPerformed(evt);
            }
        });

        buttonEditMedication.setText("Edit Selected Medication");
        buttonEditMedication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditMedicationActionPerformed(evt);
            }
        });

        buttonDeleteMedication.setText("Delete Selected Medication");
        buttonDeleteMedication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteMedicationActionPerformed(evt);
            }
        });

        buttonAddMedication.setText("Add New Medication");
        buttonAddMedication.setActionCommand("");
        buttonAddMedication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddMedicationActionPerformed(evt);
            }
        });

        jLabel3.setText("Medication ID:");

        MedicationID.setEditable(false);
        MedicationID.setBackground(java.awt.Color.pink);

        jLabel4.setText("Current Medicaton ID:");

        CurrentLMedicationID.setToolTipText("");

        PrescriptionQuanityUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrescriptionQuanityUnitsActionPerformed(evt);
            }
        });

        jLabel7.setText("Medication:");

        jLabel8.setText("jLabel8");

        jLabel9.setText("Prescription Quanity");

        jLabel10.setText("Prescription Quanity Units:");

        jLabel11.setText("Refill Period:");

        jLabel12.setText("Prescription HCP:");

        jLabel13.setText("Prescription Date:");

        jLabel15.setText("Access Forms:");

        jLabel16.setText("Refills:");

        buttonAllergyHisForm.setText("Allergy History Form");
        buttonAllergyHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAllergyHisFormActionPerformed(evt);
            }
        });

        buttonFamilyHisForm.setText("Family History Form");
        buttonFamilyHisForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFamilyHisFormActionPerformed(evt);
            }
        });

        jLabel18.setText("Pharmacy ID:");

        jLabel20.setText("Prescription Meds Amount:");

        jLabel22.setText("Prescription Meds Unit:");

        jLabel25.setText("Medication Start Date:");

        jLabel26.setText("Medication End Date:");

        MedicationEndDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedicationEndDateActionPerformed(evt);
            }
        });

        jLabel29.setText("Instructions:");

        Instructions.setText(" ");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medication ID", "Medication", "Current Medication ID", "Refills"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        buttonCloseMedicatonForm.setText("Close");
        buttonCloseMedicatonForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseMedicatonFormActionPerformed(evt);
            }
        });

        CheckBoxGeneric.setText("Generic:");
        CheckBoxGeneric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBoxGenericActionPerformed(evt);
            }
        });

        jLabel5.setText("Patient ID:");

        PatientID.setEditable(false);
        PatientID.setBackground(java.awt.Color.pink);

        UpdateButton.setText("Update Data");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Instructions)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 421, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(726, 726, 726))
                            .addComponent(buttonImmunizationHisForm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonFamilyHisForm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonAllergyHisForm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonGenMedHisForm, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel20)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel18)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel25)
                                            .addComponent(jLabel26))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(MedicationID, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jLabel5)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(PatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(Medication, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel9)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(PrescriptionQuanity))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(PrescriptionHCP, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                                        .addComponent(PrescriptionQuanityUnits))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addComponent(CheckBoxGeneric)
                                                            .addGap(18, 18, 18)
                                                            .addComponent(jLabel16)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(Refills, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jLabel11)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(RefillPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addComponent(jLabel13)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(PrescriptionDate, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addComponent(CurrentLMedicationID, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(PrescriptionMedsUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(PrescriptionMedsAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(PharmacyID, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(MedicationStartDate, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(MedicationEndDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(buttonAddMedication)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buttonEditMedication)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buttonDeleteMedication)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buttonSaveMedication)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buttonCloseMedicatonForm)))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonGenMedHisForm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonAllergyHisForm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonFamilyHisForm)
                        .addGap(0, 0, 0)
                        .addComponent(buttonImmunizationHisForm))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonAddMedication)
                            .addComponent(buttonEditMedication)
                            .addComponent(buttonDeleteMedication)
                            .addComponent(buttonSaveMedication)
                            .addComponent(buttonCloseMedicatonForm))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UpdateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(MedicationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(PatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CurrentLMedicationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Medication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(PrescriptionQuanity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrescriptionQuanityUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(Refills, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel11)
                    .addComponent(RefillPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CheckBoxGeneric))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(PrescriptionHCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(PrescriptionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(PharmacyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(PrescriptionMedsAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(PrescriptionMedsUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(MedicationStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MedicationEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Instructions, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(438, 438, 438))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //author sara rodiguez
    private void table_update()
    {
        int c;
        String InsertSql = ("select * from patientmedicationstable WHERE PatientID = " +  PatientID.getText());
        try
        {
            //register drive class
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(dburl, "root","P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSql);

            Statement  stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(InsertSql);

            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
            Df.setRowCount(0);

             //insert into jTable column/rows
            while(rs.next())
            {
                PatientID.setText(rs.getString("PatientID")) ;

                Vector v2 = new Vector();
                for(int i=1;i<=c;i++)
                {
                    v2.add(rs.getString("MedicationID"));
                    v2.add(rs.getString("Medication"));
                    v2.add(rs.getString("CurrentMedicationID"));
                    v2.add(rs.getString("Refills"));

                }

                Df.addRow(v2);
            }

            con.close();

        }
        catch(SQLException e)
        {

            System.out.println("Error executing Table Update Operation");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
    }
    private void PrescriptionQuanityUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrescriptionQuanityUnitsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrescriptionQuanityUnitsActionPerformed

    private void MedicationEndDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedicationEndDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MedicationEndDateActionPerformed

    private void buttonGenMedHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenMedHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        GeneralMedicalHistory form = new GeneralMedicalHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonGenMedHisFormActionPerformed

    
    private void buttonAllergyHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAllergyHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        // calls Allergy Form
        AllergyHistory form = new AllergyHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonAllergyHisFormActionPerformed

    private void buttonFamilyHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFamilyHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        //calls Familiy History Form
        FamilyHistory form = new FamilyHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonFamilyHisFormActionPerformed

    private void buttonImmunizationHisFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImmunizationHisFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        // calls Immunization Form
        ImmunizationHistory form = new ImmunizationHistory(getCurrentPatientID());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonImmunizationHisFormActionPerformed

    private void buttonAddMedicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddMedicationActionPerformed
        // TODO add your handling code here:
        //Author Sharyl Riley
        isNew = true;
        backGround = Color.WHITE;
        toggleEditAndBackground();

        resetTextInTableMedicationHistory();
    }//GEN-LAST:event_buttonAddMedicationActionPerformed

    private void buttonEditMedicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditMedicationActionPerformed
        // TODO add your handling code here:
        //Author Sharyl Riley
        backGround = Color.WHITE;
        isNew = true;
        toggleEditAndBackground();

        //author sara rodriguez 
        String InsertSql = ("select * from patientmedicationstable WHERE MedicationID=" ) + MedicationID.getText();//+ getCurrentPatientID());
        try
        {
        //register the driver class
        //initialize
            Class.forName("com.mysql.cj.jdbc.Driver");
            //actual connect with login
            Connection con = DriverManager.getConnection(dburl, "root", "P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSql); //insert statement from above

            Statement  stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(InsertSql);

           //displays ALL information into jTextfields
            while(rs.next())
            {

                CurrentLMedicationID.setText(rs.getString("CurrentMedicationID"));
                Medication.setText(rs.getString("Medication"));
                PrescriptionQuanity.setText(rs.getString("PrescriptionQuantity"));
                PrescriptionQuanityUnits.setText(rs.getString("PrescriptionQuantityUnits"));
                Refills.setText(rs.getString("Refills"));
                RefillPeriod.setText(rs.getString("RefillPeriod"));
                CheckBoxGeneric.setSelected(rs.getString("Generic").equals("1") ? true:false); //if 1 then = true else = false
                PrescriptionHCP.setText(rs.getString("PrescriptionHCP"));
                PrescriptionDate.setText(rs.getString("PrescriptionDate"));
                PharmacyID.setText(rs.getString("PharmacyID"));
                Instructions.setText(rs.getString("Instructions"));
                PrescriptionMedsAmt.setText(rs.getString("PrescriptionMedsAmt"));
                PrescriptionMedsUnit.setText(rs.getString("PrescriptionMedsUnit"));
                MedicationStartDate.setText(rs.getString("MedicationStartDate"));
                MedicationEndDate.setText(rs.getString("MedicationEndDate"));

            }
             con.close(); //close connection
        }

        catch(SQLException e)
        {
            System.out.println("Error exceuting EDIT Operation!");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }

        //calls the getter currentPatientID
        getCurrentPatientID();

    }//GEN-LAST:event_buttonEditMedicationActionPerformed

    private void buttonDeleteMedicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteMedicationActionPerformed
        // TODO add your handling code here:
        //author sara rodriguez 
        
        String InsertSQL = "DELETE from patientmedicationstable WHERE MedicationID=?"; 
        try
        {
        //register the driver class
        //initialize
            Class.forName("com.mysql.cj.jdbc.Driver");
            //actual connect with login
            Connection con = DriverManager.getConnection(dburl, "root", "P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSQL); //insert statement from above

             //1 = first ? from above
            ps.setString(1, MedicationID.getText());
            ps.executeUpdate();
            con.close(); //close connection
        }

        catch(SQLException e)
        {
            System.out.println("Error exceuting DELETE Operation!");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }



        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();

        //delete row
        if(jTable1.getSelectedRowCount()==1)
        {
            tblModel.removeRow(jTable1.getSelectedRow());
        }
        else
        {
            if(jTable1.getRowCount()==0)
            {
                //if table is empty(no data) than display message
                JOptionPane.showMessageDialog(this, "Table is empty.");
            }
            else //if table isnt empty but user did not select a row
            {
                JOptionPane.showMessageDialog(this, "Please select a row to be deleted.");
            }
        }

        JOptionPane.showMessageDialog(null, "Patient data is removed.");
        //reset text
        resetTextInTableMedicationHistory();
    }//GEN-LAST:event_buttonDeleteMedicationActionPerformed

    private void buttonSaveMedicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveMedicationActionPerformed
        // TODO add your handling code here:
        //Author Sharyl Riley
        isNew = false;
        backGround = Color.lightGray;
        toggleEditAndBackground();

        //author sara rodriguez 
        initializePatientIdField(PatientID.getText());

        //author of code sara rodriguez inserted and modified by sharyl riley


        String medication = Medication.getText();
        String prescriptionQuantity = PrescriptionQuanity.getText();
        String prescriptionQuantityUnits = PrescriptionQuanityUnits.getText();
        String refillPeriod = RefillPeriod.getText();
        String prescriptionDate = PrescriptionDate.getText();
        String instructions = Instructions.getText(); 
        String prescriptionMedsAmt = PrescriptionMedsAmt.getText();
        String prescriptionMedsUnit = PrescriptionMedsUnit.getText();
        String medicationStartDate = MedicationStartDate.getText();
        String medicationEndDate = MedicationEndDate.getText(); 
        String generic = CheckBoxGeneric.isSelected()? "1":"0"; //true:false


        String InsertSql = "INSERT INTO patientmedicationstable" + "(  CurrentMedicationID, Medication, PrescriptionQuantity, PrescriptionQuantityUnits, Refills, RefillPeriod, Generic, PrescriptionHCP, PrescriptionDate, PharmacyID, Instructions, PrescriptionMedsAmt, PrescriptionMedsUnit, MedicationStartDate, MedicationEndDate, PatientID) "
                + " VALUES ( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

        //insert record into MySQLDatabase
        try
        {
            DefaultTableModel Df = (DefaultTableModel) tabledemographics.getModel();

            int selectedRowIndex = tabledemographics.getSelectedRow();

            int medicationID = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());//int medicationID = Integer.parseInt(MedicationID.getText().toString());
            int currentMedicationID = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());
            int refills = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());
            //int generic = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());
            int prescriptionHCP = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());
            int pharmacyID = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());

            int PatientID = Integer.parseInt(Df.getValueAt(selectedRowIndex,0).toString());

            //register drive class
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(dburl, "root","P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSql);
            ps.setInt(1,currentMedicationID);
            ps.setString(2, medication);
            ps.setString(3, prescriptionQuantity);
            ps.setString(4, prescriptionQuantityUnits);
            ps.setInt(5,refills);
            ps.setString(6,refillPeriod);
            ps.setString(7, generic);
            ps.setInt(8, prescriptionHCP);
            ps.setString(9, prescriptionDate);
            ps.setInt(10,pharmacyID);
            ps.setString(11, instructions);
            ps.setString(12, prescriptionMedsAmt);
            ps.setString(13, prescriptionMedsUnit);
            ps.setString(14, medicationStartDate);
            ps.setString(15, medicationEndDate);
            ps.setInt(16, PatientID);

            int rowCount = ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Record Added Succesfully");

            //resets text fields
            resetTextInTableMedicationHistory();
            //updates table
            table_update();

            con.close();

        }
        catch(SQLException e)
        {

            System.out.println("Error executing INSERT Operation");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_buttonSaveMedicationActionPerformed

    private void buttonCloseMedicatonFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseMedicatonFormActionPerformed
        // TODO add your handling code here:
        
        //Author Sharyl Riley
        //calls Medication History Form
        PatientDemographics form = new PatientDemographics ();
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonCloseMedicatonFormActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        //Author Sharyl Riley
        isNew = false;
        backGround = Color.lightGray;

        //author sara rodriguez 
        initializePatientIdField(PatientID.getText());
        //author sara rodriguez 
        DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        //update MySQLDatabase
        try
        {
            int MedicationID = Integer.parseInt(Df.getValueAt(selectedIndex,0).toString());
            //int medicationID = Integer.parseInt(Df.getValueAt(selectedIndex,0).toString());
            String currentMedicationID = CurrentLMedicationID.getText();
            //int patientID = Integer.parseInt(Df.getValueAt(selectedIndex,0).toString());
            String medication = Medication.getText();
            String prescriptionQuantity = PrescriptionQuanity.getText();
            String prescriptionQuantityUnits = PrescriptionQuanityUnits.getText();
            String refills = Refills.getText();
            String refillPeriod = RefillPeriod.getText();
            String generic = CheckBoxGeneric.isSelected()? "1":"0"; //true:false
            String prescriptionHCP = PrescriptionHCP.getText();
            String prescriptionDate = PrescriptionDate.getText();
            String pharmacyID = PharmacyID.getText();
            String instructions = Instructions.getText(); 
            String prescriptionMedsAmt = PrescriptionMedsAmt.getText();
            String prescriptionMedsUnit = PrescriptionMedsUnit.getText();
            String medicationStartDate = MedicationStartDate.getText();
            String medicationEndDate = MedicationEndDate.getText();

            String InsertSql = ("update patientmedicationstable set CurrentMedicationID=?,Medication=?,PrescriptionQuantity=?,PrescriptionQuantityUnits=?, Refills=?, RefillPeriod=?,Generic=?, PrescriptionHCP=?, PrescriptionDate=?, PharmacyID=?, Instructions=?, PrescriptionMedsAmt=?, PrescriptionMedsUnit=?, MedicationStartDate=?, MedicationEndDate=?  where MedicationID=?");


            //register drive class
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(dburl, "root","P@ssw0rd");
            PreparedStatement ps = con.prepareStatement(InsertSql);



            ps.setString(1,currentMedicationID);
            ps.setString(2, medication);
            ps.setString(3, prescriptionQuantity);
            ps.setString(4, prescriptionQuantityUnits);
            ps.setString(5,refills);
            ps.setString(6,refillPeriod);
            ps.setString(7, generic);
            ps.setString(8, prescriptionHCP);
            ps.setString(9, prescriptionDate);
            ps.setString(10,pharmacyID);
            ps.setString(11, instructions);
            ps.setString(12, prescriptionMedsAmt);
            ps.setString(13, prescriptionMedsUnit);
            ps.setString(14, medicationStartDate);
            ps.setString(15, medicationEndDate);
            ps.setInt(16, MedicationID);

            ps.executeUpdate();
            int rowCount = ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record was Updated");
            //updates table
            table_update();

            //resets text fields
            resetTextInTableMedicationHistory();
            toggleEditAndBackground();


            con.close();

        }
        catch(SQLException e)
        {

            System.out.println("Error executing Update Operation");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void CheckBoxGenericActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBoxGenericActionPerformed
        // TODO add your handling code here:
        
        //author sara rodriguez
        CheckBoxGeneric.setSelected(toggleGeneric());
    }//GEN-LAST:event_CheckBoxGenericActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        //author sara rodriguez 
        DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

         //puts information into text fields when clicking a record
        MedicationID.setText(Df.getValueAt(selectedIndex, 0).toString());
        Medication.setText(Df.getValueAt(selectedIndex, 1).toString());
        CurrentLMedicationID.setText(Df.getValueAt(selectedIndex, 2).toString());
        Refills.setText(Df.getValueAt(selectedIndex, 3).toString());

    }
        //author sara rodriguez
    private boolean toggleGeneric(){
        
        return ! isGeneric;

    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientDemographics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientDemographics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientDemographics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientDemographics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicationHistory(PatientDemographics.getCurrentPatientID()).setVisible(true);
            }
        });
    }
    //author sara rodriguez 
    private static void initializePatientIdField(String patientID)
    {
        PatientID.setText(patientID); //used to pass PatientID
    }
    //Author sharyl riley
     private static void toggleEditAndBackground(){
        CurrentLMedicationID.setEditable(isNew);
        Medication.setEditable(isNew);
        PrescriptionQuanity.setEditable(isNew);
        PrescriptionQuanityUnits.setEditable(isNew);
        Refills.setEditable(isNew);
        RefillPeriod.setEditable(isNew);
        PrescriptionHCP.setEditable(isNew); 
        PrescriptionDate.setEditable(isNew);
        PharmacyID.setEditable(isNew);
        Instructions.setEditable(isNew); 
        PrescriptionMedsAmt.setEditable(isNew);
        PrescriptionMedsUnit.setEditable(isNew);
        MedicationStartDate.setEditable(isNew);
        MedicationEndDate.setEditable(isNew); 


        CurrentLMedicationID.setBackground(backGround);
        Medication.setBackground(backGround);
        PrescriptionQuanity.setBackground(backGround);
        PrescriptionQuanityUnits.setBackground(backGround);
        Refills.setBackground(backGround);
        RefillPeriod.setBackground(backGround);
        CheckBoxGeneric.setBackground(backGround);
        PrescriptionHCP.setBackground(backGround); 
        PrescriptionDate.setBackground(backGround);
        PharmacyID.setBackground(backGround);
        Instructions.setBackground(backGround); 
        PrescriptionMedsAmt.setBackground(backGround);
        PrescriptionMedsUnit.setBackground(backGround);
        MedicationStartDate.setBackground(backGround);
        MedicationEndDate.setBackground(backGround); 
     }
     
     //Author Sharyl Riley
    private static void resetTextInTableMedicationHistory(){
        //resets variables
        CurrentLMedicationID.setText("");
        Medication.setText("");
        PrescriptionQuanity.setText("");
        PrescriptionQuanityUnits.setText("");
        Refills.setText("");
        RefillPeriod.setText("");
        CheckBoxGeneric.setSelected(isGeneric = false);
        PrescriptionHCP.setText(""); 
        PrescriptionDate.setText("");
        PharmacyID.setText("");
        Instructions.setText(""); 
        PrescriptionMedsAmt.setText("");
        PrescriptionMedsUnit.setText("");
        MedicationStartDate.setText("");
        MedicationEndDate.setText(""); 
    }

    //Author Sharyl Riley
    // variables for toggleEditAndBackground Method (global variables)
    private static boolean isNew = false;
    private static Color backGround = Color.LIGHT_GRAY;
    private static String currentPatientID;
    private static boolean isGeneric = false;
    //author sara rodriguez
    //connection string of the database
    private static String dburl = "jdbc:mysql://localhost:3306/genmedhis?autoconnect=true&useSSL=false";

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JCheckBox CheckBoxGeneric;
    public static javax.swing.JTextField CurrentLMedicationID;
    public static javax.swing.JTextField Instructions;
    public static javax.swing.JTextField Medication;
    public static javax.swing.JTextField MedicationEndDate;
    public static javax.swing.JTextField MedicationID;
    public static javax.swing.JTextField MedicationStartDate;
    public static javax.swing.JTextField PatientID;
    public static javax.swing.JTextField PharmacyID;
    private static javax.swing.JTextField PrescriptionDate;
    public static javax.swing.JTextField PrescriptionHCP;
    public static javax.swing.JTextField PrescriptionMedsAmt;
    public static javax.swing.JTextField PrescriptionMedsUnit;
    public static javax.swing.JTextField PrescriptionQuanity;
    public static javax.swing.JTextField PrescriptionQuanityUnits;
    public static javax.swing.JTextField RefillPeriod;
    public static javax.swing.JTextField Refills;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JButton buttonAddMedication;
    private javax.swing.JButton buttonAllergyHisForm;
    private javax.swing.JButton buttonCloseMedicatonForm;
    private javax.swing.JButton buttonDeleteMedication;
    private javax.swing.JButton buttonEditMedication;
    private javax.swing.JButton buttonFamilyHisForm;
    private javax.swing.JButton buttonGenMedHisForm;
    private javax.swing.JButton buttonImmunizationHisForm;
    private javax.swing.JButton buttonSaveMedication;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
